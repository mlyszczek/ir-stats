; this is example config file for progen, it is simple INI file
; (https://en.wikipedia.org/wiki/INI_file)

; [project] section is mandatory as python's configparse does not support
; INI files without at least one section
[project]
name = ir-stats
author= Michał Łyszczek
author-email = michal.lyszczek@bofc.pl
out-dir = ./
; under what license project is licensed? One of:
; apache2, bsd2, bsd3, gpl2, gpl3, lgpl2, lgpl21, mit
license = bsd2

; config modules generates config.{h,c} files which handles reading options
; from command line (getopt()), from INI file or via -DDEFINE compiler option.
[config]
; location of database file with options, relative to this .conf file
db-file = ir-stats.db

; if set to 1, progen will generate .ini file for your project and will
; add support for parsing ini at program bootup. Even if you say 1 here,
; you will still have the option to disable ini parsing code by passing
; -DPROJECT_ENABLE_INI=0 to compiler.
;
; When you set this to 0, nothing related to ini will be generated and
; there won't be a way to enable it during compile time.
use-ini = 1

; autotools module generates minimal autotools files needed to build your
; project. This is only a bootstrap option and should be run only once when
; you start new program. It is not suitable to generate autotools everytime.
[autotools]
; if your project uses threads, set this to 1, this will add some M4
; macros to check for CFLAGS and LDFLAGS on different systems
pthreads = 0

; enable code coverage using gcov and lcov, code coverage can be enabled
; later with ./configure --enable-gcov and is disabled by default
coverage = 1

; enables clang's static analyzer, analyzer can be enabled later with
; ./configure --enable-analyzer and is disabled by default
analyzer = 1

; enable if you want to have basic unit test framework based on mtest
; will also generate proper Makefile.am
unit-tests = 1

; various additional modules, if given module is set, you can find its
; configuration (if any) in section named same as key here.
[modules]
; add support for embedlog library in config and main, embedlog is small
; yet feature rich logger, can log to file with optional log rotate.
; https://embedlog.bofc.pl
embedlog = 1

; settings for embedlog module
[embedlog]
; here you can override default values if they do not suite you, you can
; use special variable: ${project_name_lh} and it will be replaces with
; projects name.
path = /var/log/${project_name_lh}.log
level = info
frotate-number = 0
colors = 1
fsync-level = 1
frotate-size = 10485760
fsync-every = 4096
ts = long
ts-tm = realtime
ts-tm-fract = ms
finfo = 1
funcinfo = 1
output = 1
prefix = ${project_name_lh}: 
